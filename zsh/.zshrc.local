
function powerline_precmd()
{
  export PS1="$(~/GitHub/powerline-shell/powerline-shell.py $? --shell zsh 2> /dev/null)"
}

function install_powerline_precmd()
{
  for s in "${precmd_functions[@]}"; do
    if [ "$s" = "powerline_precmd" ]; then
      return
    fi
  done
  precmd_functions+=(powerline_precmd)
}

install_powerline_precmd

export PATH="$HOME/homebrew/bin:$PATH"

[[ -s `brew --prefix`/etc/autojump.sh ]] && . `brew --prefix`/etc/autojump.sh
# if [ -z "$SSH_AUTH_SOCK" ]; then
#   eval `ssh-agent`
# fi
# ssh-add ~/.ssh/vm_ubuntu_rsa

export ZSH_HIGHLIGHT_HIGHLIGHTERS_DIR=/Users/zzy/homebrew/share/zsh-syntax-highlighting/highlighters
source ~/.my_shell_scripts/alias.sh

clear
bash ~/.my_shell_scripts/cow.sh

export GOPATH=${HOME}/Workbench/go
export PATH=${PATH}:${GOPATH}/bin

# export MSF_DATABASE_CONFIG=/Users/zzy/Programs/metasploit-framework/config/database.yml
# export PATH=${PATH}:"/Users/zzy/Programs/metasploit-framework"

function fuck()
{
  config_shadowsocks="$HOME/.config/shadowsocks.json"

  if [ -e "$config_shadowsocks"  ]; then
    sslocal -c $config_shadowsocks
  fi
}

# export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting

# export NVM_DIR="/Users/zzy/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
